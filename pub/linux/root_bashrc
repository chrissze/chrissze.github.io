[ -z "$PS1" ] && return       # for scp, rsync

echo "I am $USER, /root/.bashrc    starts."


##############
# ROOT ALIAS #
##############

    alias cdvol='cd /var/lib/docker/volumes'
    
    alias fw='firewall-cmd'  # DO NOT USE fi BECAUSE fi IS THE CLOSING OF if.

    alias fls='firewall-cmd --list-all'

    
    alias hi=history

    alias psa='docker ps -a'
    
    alias re="rsync -av -e 'ssh -p 55555'"
    
    alias re22="rsync -av -e 'ssh -p 22'"
    
    alias rm='rm -i'
    
    alias sou='source /root/.bash_profile'

    alias sys='systemctl status --no-pager'

    alias sysdis='systemctl disable --now'
    
    alias sysen='systemctl enable --now'

    alias sysres='systemctl restart'
    

############
# ROOT ENV #
############
    
    export EDITOR='nano'
    
    
    export HISTSIZE=500
    
    export HISTFILESIZE=500

    export NIXPKGS_ALLOW_UNFREE=1

    export VISUAL='nano'



##################
# ROOT FUNCTIONS #
##################

    cd() { builtin cd "$@" && ls -laph && echo && pwd && echo; }

    clip() { cat "$@" | xsel -b; }


    fadd() { firewall-cmd --permanent --zone=public --add-port="$@"/tcp && firewall-cmd --reload && firewall-cmd --list-all ; }

    faddu() { firewall-cmd --permanent --zone=public --add-port="$@"/udp && firewall-cmd --reload && firewall-cmd --list-all ; }

    fadds() { firewall-cmd --permanent --zone=public --add-service="$@" && firewall-cmd --reload && firewall-cmd --list-all ; }

    falls() { firewall-cmd --get-services ; }

    finfo() { firewall-cmd --info-service="$@" ; }

    frm() { firewall-cmd --permanent --zone=public --remove-port="$@"/tcp && firewall-cmd --reload && firewall-cmd --list-all ; }

    frmu() { firewall-cmd --permanent --zone=public --remove-port="$@"/udp && firewall-cmd --reload && firewall-cmd --list-all ; }

    frms() { firewall-cmd --permanent --zone=public --remove-service="$@" && firewall-cmd --reload && firewall-cmd --list-all ; }

    hit() { touch "$@" && chmod 755 "$@" && ls -la; }
    

    la() {
        if [ -z "$1" ]; then
            ls -ahlp
        else
            shopt -s dotglob nocaseglob; ls -adhlp "$1"* ."$1"* 2>/dev/null; shopt -u dotglob nocaseglob;
        fi
    }
    
    ree() { mkdir /tmp/ree && rsync -av -e 'ssh -p 55555' $1 /tmp/ree/ && rsync -av /tmp/ree/* -e 'ssh -p 55555' $2 && rm -rf /tmp/ree; }



#############
# ROOT PATH #
#############

if [ -f /etc/rootpaths ]; then
    eval PATH=$(grep -v '^\s*$\|^\s*#' /etc/rootpaths | paste -sd ":" -)
    export PATH
fi

    


echo "I am $USER, /root/.bashrc    ends."
