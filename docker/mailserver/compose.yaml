services:
  mailserver:

    image: ghcr.io/docker-mailserver/docker-mailserver:14

    container_name: mailserver14
   
    hostname: mail.nutdb.com

    env_file: mailserver.env

    ports:

      - "25:25"    # SMTP  (explicit TLS => STARTTLS, Authentication is DISABLED => use port 465/587 instead)

      - "143:143"  # IMAP4 (explicit TLS => STARTTLS)

      - "465:465"  # ESMTP (implicit TLS)

      - "587:587"  # ESMTP (explicit TLS => STARTTLS)

      - "993:993"  # IMAP4 (implicit TLS)

    volumes:

      - ./docker-data/dms/mail-data/:/var/mail/

      - ./docker-data/dms/mail-state/:/var/mail-state/

      - ./docker-data/dms/mail-logs/:/var/log/mail/

      - ./docker-data/dms/config/:/tmp/docker-mailserver/

      - /etc/localtime:/etc/localtime:ro

      - ./docker-data/acme-companion/certs/:/etc/letsencrypt/live/:ro

    restart: always

    stop_grace_period: 1m

    # Uncomment if using `ENABLE_FAIL2BAN=1`:
    # cap_add:
    #   - NET_ADMIN

    healthcheck:

      test: "ss --listening --tcp | grep -P 'LISTEN.+:smtp' || exit 1"

      timeout: 3s

      retries: 1


  reverse-proxy:

    image: nginxproxy/nginx-proxy:1.6

    # container_name here must match NGINX_PROXY_CONTAINER in acme-companion
    container_name: nginxproxy16

    restart: always

    ports:
      # Port  80: Required for HTTP-01 challenges to `acme-companion`.
      - "80:80"

      # Port 443: Only required for containers that need access over HTTPS. TLS-ALPN-01 challenge not supported.
      - "443:443"

    volumes:

      # `certs/`:      Managed by the `acme-companion` container (_read-only_).
      # `docker.sock`: Required to interact with containers via the Docker API.

      - ./docker-data/nginx-proxy/html/:/usr/share/nginx/html/

      - ./docker-data/nginx-proxy/vhost.d/:/etc/nginx/vhost.d/

      - ./docker-data/acme-companion/certs/:/etc/nginx/certs/:ro

      - /var/run/docker.sock:/tmp/docker.sock:ro

  acme-companion:

    image: nginxproxy/acme-companion:2.4

    container_name: acme24

    restart: always

    environment:
      # When `volumes_from: [nginx-proxy]` is not supported,
      # reference the _reverse-proxy_ `container_name` here:
      - NGINX_PROXY_CONTAINER=nginxproxy16

    volumes:
      # `html/`:       Write ACME HTTP-01 challenge files that `nginx-proxy` will serve.
      # `vhost.d/`:    To enable web access via `nginx-proxy` to HTTP-01 challenge files.
      # `certs/`:      To store certificates and private keys.
      # `acme-state/`: To persist config and state for the ACME provisioner (`acme.sh`).
      # `docker.sock`: Required to interact with containers via the Docker API.
      - ./docker-data/nginx-proxy/html/:/usr/share/nginx/html/

      - ./docker-data/nginx-proxy/vhost.d/:/etc/nginx/vhost.d/

      - ./docker-data/acme-companion/certs/:/etc/nginx/certs/:rw

      - ./docker-data/acme-companion/acme-state/:/etc/acme.sh/

      - /var/run/docker.sock:/var/run/docker.sock:ro
